{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/ismailjemmoudi/myInsta/src/components/Main/Home.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport firebase from 'firebase';\n\nrequire(\"firebase/firestore\");\n\nexport var Home = function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      username: '',\n      userList: [],\n      userFriends: [],\n      allUsers: [],\n      friendsInfo: []\n    };\n    _this.searchUser = _this.searchUser.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var myFriends = [];\n      var timelinePosts = [];\n      var users = [];\n      var myFriendsInfo = [];\n      console.log(\"get username\");\n      firebase.firestore().collection('users').doc(firebase.auth().currentUser.uid).get().then(function (infos) {\n        _this2.setState({\n          username: infos.data().name\n        });\n      }).then(function () {\n        console.log(\"get user friends\");\n        firebase.firestore().collection('followers').where('abonne', '==', _this2.state.username).get().then(function (infos) {\n          infos.docs.map(function (doc) {\n            myFriends.push(doc.data().abonnement);\n          });\n        }).then(function () {\n          _this2.setState({\n            userFriends: myFriends\n          });\n\n          console.log(\"get the userList\");\n          firebase.firestore().collection('users').get().then(function (infos) {\n            infos.docs.map(function (doc) {\n              users.push(doc);\n            });\n\n            _this2.setState({\n              allUsers: users\n            });\n          });\n        }).then(function () {\n          for (var i in _this2.state.userFriends) {\n            for (var j in _this2.state.allUsers) {\n              console.log(_this2.state.userFriends[i] + \" == \" + _this2.state.allUsers[j].data().name);\n\n              if (_this2.state.userFriends[i] == _this2.state.allUsers[j].data().name) {\n                myFriendsInfo.push(_this2.state.allUsers[j]);\n                break;\n              }\n            }\n          }\n        });\n      });\n    }\n  }, {\n    key: \"searchUser\",\n    value: function searchUser(search) {\n      var _this3 = this;\n\n      var myUsers = [];\n      firebase.firestore().collection('users').where('name', '>=', search).get().then(function (infos) {\n        infos.docs.map(function (doc) {\n          myUsers.push(doc);\n        });\n\n        _this3.setState({\n          userList: myUsers\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, \"Welcome Home ! \"), React.createElement(Button, {\n        title: \"Add Picture\",\n        onPress: function onPress() {\n          _this4.props.navigation.navigate('addPicture');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        title: \"Go to home page\",\n        onPress: function onPress() {\n          _this4.props.navigation.navigate('homePage', {\n            res: _this4.state.username\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Search User\",\n        onChangeText: function onChangeText(search) {\n          _this4.searchUser(search);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }), React.createElement(FlatList, {\n        numColumns: 1,\n        horizental: false,\n        data: this.state.userList,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this4.props.navigation.navigate('friendPage', {\n                res: item,\n                friends: _this4.state.userFriends,\n                originalUser: _this4.state.username\n              });\n            },\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }\n          }, React.createElement(Text, {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }\n          }, item.data().name));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      })), React.createElement(Button, {\n        title: \"Log Out\",\n        onPress: function onPress() {\n          _this4.props.navigation.navigate('Logout');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Home;\n}(Component);\nexport default Home;","map":{"version":3,"sources":["/home/ismailjemmoudi/myInsta/src/components/Main/Home.js"],"names":["React","Component","firebase","require","Home","props","state","username","userList","userFriends","allUsers","friendsInfo","searchUser","bind","myFriends","timelinePosts","users","myFriendsInfo","console","log","firestore","collection","doc","auth","currentUser","uid","get","then","infos","setState","data","name","where","docs","map","push","abonnement","i","j","search","myUsers","navigation","navigate","res","item","friends","originalUser"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;AAGA,OAAOC,QAAP,MAAqB,UAArB;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AAEA,WAAaC,IAAb;AAAA;;AAAA;;AAEI,gBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AACPC,MAAAA,QAAQ,EAAC,EADF;AAEPC,MAAAA,QAAQ,EAAE,EAFH;AAGPC,MAAAA,WAAW,EAAE,EAHN;AAIPC,MAAAA,QAAQ,EAAC,EAJF;AAKPC,MAAAA,WAAW,EAAC;AALL,KAAX;AAOA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB;AATc;AAUjB;;AAZL;AAAA;AAAA,WAcI,6BAAmB;AAAA;;AACf,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,aAAa,GAAG,EAApB;AACA,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIC,aAAa,GAAG,EAApB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAjB,MAAAA,QAAQ,CAACkB,SAAT,GACKC,UADL,CACgB,OADhB,EAEKC,GAFL,CAESpB,QAAQ,CAACqB,IAAT,GAAgBC,WAAhB,CAA4BC,GAFrC,EAGKC,GAHL,GAIKC,IAJL,CAIU,UAACC,KAAD,EAAS;AACX,QAAA,MAAI,CAACC,QAAL,CAAc;AAACtB,UAAAA,QAAQ,EAACqB,KAAK,CAACE,IAAN,GAAaC;AAAvB,SAAd;AACH,OANL,EAQKJ,IARL,CAQU,YAAI;AACNT,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAjB,QAAAA,QAAQ,CAACkB,SAAT,GACCC,UADD,CACY,WADZ,EAECW,KAFD,CAEO,QAFP,EAEgB,IAFhB,EAEqB,MAAI,CAAC1B,KAAL,CAAWC,QAFhC,EAGCmB,GAHD,GAICC,IAJD,CAIM,UAACC,KAAD,EAAS;AACXA,UAAAA,KAAK,CAACK,IAAN,CAAWC,GAAX,CAAe,UAAAZ,GAAG,EAAI;AAClBR,YAAAA,SAAS,CAACqB,IAAV,CAAeb,GAAG,CAACQ,IAAJ,GAAWM,UAA1B;AACH,WAFD;AAIH,SATD,EAYCT,IAZD,CAYM,YAAI;AACN,UAAA,MAAI,CAACE,QAAL,CAAc;AAACpB,YAAAA,WAAW,EAACK;AAAb,WAAd;;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAjB,UAAAA,QAAQ,CAACkB,SAAT,GACCC,UADD,CACY,OADZ,EAECK,GAFD,GAGCC,IAHD,CAGM,UAACC,KAAD,EAAS;AACXA,YAAAA,KAAK,CAACK,IAAN,CAAWC,GAAX,CAAe,UAAAZ,GAAG,EAAI;AAClBN,cAAAA,KAAK,CAACmB,IAAN,CAAWb,GAAX;AACH,aAFD;;AAGA,YAAA,MAAI,CAACO,QAAL,CAAc;AAACnB,cAAAA,QAAQ,EAAEM;AAAX,aAAd;AAAiC,WAPrC;AAQP,SAvBG,EAyBHW,IAzBG,CAyBE,YAAI;AACN,eAAK,IAAIU,CAAT,IAAc,MAAI,CAAC/B,KAAL,CAAWG,WAAzB,EAAqC;AACjC,iBAAK,IAAI6B,CAAT,IAAc,MAAI,CAAChC,KAAL,CAAWI,QAAzB,EAAkC;AAC9BQ,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACb,KAAL,CAAWG,WAAX,CAAuB4B,CAAvB,IAA2B,MAA3B,GAAkC,MAAI,CAAC/B,KAAL,CAAWI,QAAX,CAAoB4B,CAApB,EAAuBR,IAAvB,GAA8BC,IAA5E;;AACA,kBAAI,MAAI,CAACzB,KAAL,CAAWG,WAAX,CAAuB4B,CAAvB,KAA6B,MAAI,CAAC/B,KAAL,CAAWI,QAAX,CAAoB4B,CAApB,EAAuBR,IAAvB,GAA8BC,IAA/D,EAAoE;AAChEd,gBAAAA,aAAa,CAACkB,IAAd,CAAmB,MAAI,CAAC7B,KAAL,CAAWI,QAAX,CAAoB4B,CAApB,CAAnB;AACA;AACH;AACJ;AACJ;AACJ,SAnCG;AAoCP,OA9CD;AAgDH;AArEL;AAAA;AAAA,WAuEI,oBAAWC,MAAX,EAAkB;AAAA;;AACd,UAAIC,OAAO,GAAG,EAAd;AACAtC,MAAAA,QAAQ,CAACkB,SAAT,GACKC,UADL,CACgB,OADhB,EAEKW,KAFL,CAEW,MAFX,EAEkB,IAFlB,EAEuBO,MAFvB,EAGKb,GAHL,GAIKC,IAJL,CAIU,UAACC,KAAD,EAAS;AACXA,QAAAA,KAAK,CAACK,IAAN,CAAWC,GAAX,CAAe,UAAAZ,GAAG,EAAI;AAClBkB,UAAAA,OAAO,CAACL,IAAR,CAAab,GAAb;AACH,SAFD;;AAGA,QAAA,MAAI,CAACO,QAAL,CAAc;AAACrB,UAAAA,QAAQ,EAAEgC;AAAX,SAAd;AACH,OATL;AAUH;AAnFL;AAAA;AAAA,WAsFI,kBAAS;AAAA;;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,aAAd;AAA4B,QAAA,OAAO,EAAE,mBAAK;AAAC,UAAA,MAAI,CAACnC,KAAL,CAAWoC,UAAX,CAAsBC,QAAtB,CAA+B,YAA/B;AAA6C,SAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,iBAAd;AAAgC,QAAA,OAAO,EAAE,mBAAK;AAAC,UAAA,MAAI,CAACrC,KAAL,CAAWoC,UAAX,CAAsBC,QAAtB,CAA+B,UAA/B,EAA0C;AAACC,YAAAA,GAAG,EAAC,MAAI,CAACrC,KAAL,CAAWC;AAAhB,WAA1C;AAAqE,SAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAC,aAAvB;AAAqC,QAAA,YAAY,EAAE,sBAACgC,MAAD,EAAU;AAAC,UAAA,MAAI,CAAC3B,UAAL,CAAgB2B,MAAhB;AAAwB,SAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,QAAD;AACI,QAAA,UAAU,EAAE,CADhB;AAEI,QAAA,UAAU,EAAE,KAFhB;AAGI,QAAA,IAAI,EAAE,KAAKjC,KAAL,CAAWE,QAHrB;AAII,QAAA,UAAU,EAAE;AAAA,cAAEoC,IAAF,QAAEA,IAAF;AAAA,iBACR,oBAAC,gBAAD;AACI,YAAA,OAAO,EAAE;AAAA,qBAAI,MAAI,CAACvC,KAAL,CAAWoC,UAAX,CAAsBC,QAAtB,CAA+B,YAA/B,EAA4C;AAACC,gBAAAA,GAAG,EAAEC,IAAN;AACDC,gBAAAA,OAAO,EAAE,MAAI,CAACvC,KAAL,CAAWG,WADnB;AAEDqC,gBAAAA,YAAY,EAAE,MAAI,CAACxC,KAAL,CAAWC;AAFxB,eAA5C,CAAJ;AAAA,aADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOqC,IAAI,CAACd,IAAL,GAAYC,IAAnB,CAJJ,CADQ;AAAA,SAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAJJ,EAmBI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE,mBAAK;AAAC,UAAA,MAAI,CAAC1B,KAAL,CAAWoC,UAAX,CAAsBC,QAAtB,CAA+B,QAA/B;AAAyC,SAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBJ,CADJ;AAwBH;AA/GL;;AAAA;AAAA,EAA0BzC,SAA1B;AAkHA,eAAeG,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport {View, Button, TextInput,FlatList,Text, TouchableOpacity} from 'react-native'\n\nimport firebase from 'firebase'\nrequire(\"firebase/firestore\")\n\nexport class Home extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state={\n            username:'',\n            userList: [],\n            userFriends: [],\n            allUsers:[],\n            friendsInfo:[]\n        }\n        this.searchUser = this.searchUser.bind(this)\n    }\n\n    componentDidMount(){\n        let myFriends = []\n        let timelinePosts = []        \n        let users = []\n        let myFriendsInfo = []\n        // get username\n        console.log(\"get username\")\n        firebase.firestore()\n            .collection('users')\n            .doc(firebase.auth().currentUser.uid)\n            .get()\n            .then((infos)=>{\n                this.setState({username:infos.data().name})\n            })\n            // get user friends\n            .then(()=>{\n                console.log(\"get user friends\")\n                firebase.firestore()\n                .collection('followers')\n                .where('abonne','==',this.state.username)\n                .get()\n                .then((infos)=>{\n                    infos.docs.map(doc => {\n                        myFriends.push(doc.data().abonnement)                        \n                    })\n                    //this.setState({userFriends:myFriends})\n                })\n            //})\n            // get the userList\n                .then(()=>{\n                    this.setState({userFriends:myFriends})\n                    console.log(\"get the userList\")\n                    firebase.firestore()\n                    .collection('users')\n                    .get()\n                    .then((infos)=>{\n                        infos.docs.map(doc => {\n                            users.push(doc)\n                        })\n                        this.setState({allUsers: users})})\n            })\n            // get the full information of my friends\n            .then(()=>{\n                for (var i in this.state.userFriends){\n                    for (var j in this.state.allUsers){\n                        console.log(this.state.userFriends[i] +\" == \"+this.state.allUsers[j].data().name)\n                        if (this.state.userFriends[i] == this.state.allUsers[j].data().name){\n                            myFriendsInfo.push(this.state.allUsers[j])\n                            break;\n                        }\n                    }\n                } \n            })\n        })\n        \n    }\n\n    searchUser(search){\n        let myUsers = []\n        firebase.firestore()\n            .collection('users')\n            .where('name','>=',search)\n            .get()\n            .then((infos)=>{\n                infos.docs.map(doc => {\n                    myUsers.push(doc)\n                })\n                this.setState({userList: myUsers})\n            })\n    }\n    \n    \n    render() {\n        return (\n            <View>\n                <Text>Welcome Home ! </Text>                \n                <Button title=\"Add Picture\" onPress={()=> {this.props.navigation.navigate('addPicture')}}/>\n                <Button title=\"Go to home page\" onPress={()=> {this.props.navigation.navigate('homePage',{res:this.state.username})}}/>\n                <View>\n                    <TextInput placeholder=\"Search User\" onChangeText={(search)=>{this.searchUser(search)}}/>\n                    <FlatList\n                        numColumns={1}\n                        horizental={false}\n                        data={this.state.userList}\n                        renderItem={({item})=>(\n                            <TouchableOpacity \n                                onPress={()=>this.props.navigation.navigate('friendPage',{res: item,\n                                                                                        friends: this.state.userFriends,\n                                                                                        originalUser: this.state.username})}>\n                                <Text>{item.data().name}</Text>\n                            </TouchableOpacity>\n                        )} />\n                </View>\n                <Button title=\"Log Out\" onPress={()=> {this.props.navigation.navigate('Logout')}} />\n\n            </View>\n            )\n    }\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}