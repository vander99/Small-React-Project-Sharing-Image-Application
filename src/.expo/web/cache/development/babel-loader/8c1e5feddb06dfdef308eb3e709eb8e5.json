{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/ismailjemmoudi/myInsta/src/components/Main/Home.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport firebase from 'firebase';\n\nrequire(\"firebase/firestore\");\n\nexport var Home = function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      username: '',\n      userList: [],\n      userFriends: [],\n      allUsers: [],\n      friendsInfo: []\n    };\n    _this.searchUser = _this.searchUser.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var myFriends = [];\n      var timelinePosts = [];\n      var users = [];\n      var myFriendsInfo = [];\n      firebase.firestore().collection('users').doc(firebase.auth().currentUser.uid).get().then(function (infos) {\n        _this2.setState({\n          username: infos.data().name\n        });\n\n        firebase.firestore().collection('followers').where('abonne', '==', _this2.state.username).get().then(function (infos) {\n          infos.docs.map(function (doc) {\n            myFriends.push(doc.data().abonnement);\n          });\n\n          _this2.setState({\n            userFriends: myFriends\n          });\n\n          _this2.setState({\n            userFriends: myFriends\n          });\n\n          firebase.firestore().collection('users').get().then(function (infos) {\n            infos.docs.map(function (doc) {\n              users.push(doc);\n            });\n\n            _this2.setState({\n              allUsers: users\n            });\n\n            for (var i = 0; i < _this2.state.userFriends.length; i++) {\n              for (var j = 0; j < _this2.state.allUsers.length; j++) {\n                if (_this2.state.userFriends[i] == _this2.state.allUsers[j].data().name) {\n                  myFriendsInfo.push(_this2.state.allUsers[j]);\n                  j = _this2.state.allUsers.length;\n                }\n              }\n\n              _this2.setState({\n                friendsInfo: myFriendsInfo\n              });\n            }\n\n            for (var ii = 0; ii < _this2.state.friendsInfo.length; ii++) {\n              console.log(_this2.state.friendsInfo[ii].id);\n              firebase.firestore().collection('posts').doc(_this2.state.friendsInfo[ii].id).collection(\"userPosts\").orderBy(\"date\", \"asc\").limit(2).get().then(function (infos) {\n                var posts = infos.docs.map(function (doc) {\n                  var data = doc.data();\n                  timelinePosts.push(data);\n                });\n              });\n            }\n\n            timelinePosts.sort(function (a, b) {\n              return new Date(b.date) - new Date(a.date);\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"searchUser\",\n    value: function searchUser(search) {\n      var _this3 = this;\n\n      var myUsers = [];\n      firebase.firestore().collection('users').where('name', '>=', search).get().then(function (infos) {\n        infos.docs.map(function (doc) {\n          myUsers.push(doc);\n        });\n\n        _this3.setState({\n          userList: myUsers\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, \"Welcome Home ! \"), React.createElement(Button, {\n        title: \"Add Picture\",\n        onPress: function onPress() {\n          _this4.props.navigation.navigate('addPicture');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        title: \"Go to home page\",\n        onPress: function onPress() {\n          _this4.props.navigation.navigate('homePage', {\n            res: _this4.state.username\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Search User\",\n        onChangeText: function onChangeText(search) {\n          _this4.searchUser(search);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }), React.createElement(FlatList, {\n        numColumns: 1,\n        horizental: false,\n        data: this.state.userList,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this4.props.navigation.navigate('friendPage', {\n                res: item,\n                friends: _this4.state.userFriends,\n                originalUser: _this4.state.username\n              });\n            },\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }\n          }, React.createElement(Text, {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }\n          }, item.data().name));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      })), React.createElement(Button, {\n        title: \"Log Out\",\n        onPress: function onPress() {\n          _this4.props.navigation.navigate('Logout');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Home;\n}(Component);\nexport default Home;","map":{"version":3,"sources":["/home/ismailjemmoudi/myInsta/src/components/Main/Home.js"],"names":["React","Component","firebase","require","Home","props","state","username","userList","userFriends","allUsers","friendsInfo","searchUser","bind","myFriends","timelinePosts","users","myFriendsInfo","firestore","collection","doc","auth","currentUser","uid","get","then","infos","setState","data","name","where","docs","map","push","abonnement","i","length","j","ii","console","log","id","orderBy","limit","posts","sort","a","b","Date","date","search","myUsers","navigation","navigate","res","item","friends","originalUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {View, Button, TextInput,FlatList,Text, TouchableOpacity} from 'react-native'\n\nimport firebase from 'firebase'\nrequire(\"firebase/firestore\")\n\nexport class Home extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state={\n            username:'',\n            userList: [],\n            userFriends: [],\n            allUsers:[],\n            friendsInfo:[]\n        }\n        this.searchUser = this.searchUser.bind(this)\n    }\n\n    componentDidMount(){\n        let myFriends = []\n        let timelinePosts = []        \n        let users = []\n        let myFriendsInfo = []\n        // get username\n        firebase.firestore()\n            .collection('users')\n            .doc(firebase.auth().currentUser.uid)\n            .get()\n            .then((infos)=>{\n                this.setState({username:infos.data().name})\n                // get user friends\n                firebase.firestore()\n                .collection('followers')\n                .where('abonne','==',this.state.username)\n                .get()\n                .then((infos)=>{\n                    infos.docs.map(doc => {\n                        myFriends.push(doc.data().abonnement)                        \n                    })\n                    this.setState({userFriends:myFriends})\n                    // get the userList\n                    this.setState({userFriends:myFriends})\n                    firebase.firestore()\n                    .collection('users')\n                    .get()\n                    .then((infos)=>{\n                        infos.docs.map(doc => {\n                            users.push(doc)\n                        })\n                        this.setState({allUsers: users})\n                        // get the full information of my friends\n                        for (var i =0;i < this.state.userFriends.length; i++){\n                            for (var j=0;j< this.state.allUsers.length;j++){\n                                if (this.state.userFriends[i] == this.state.allUsers[j].data().name){\n                                    myFriendsInfo.push(this.state.allUsers[j])\n                                    j=this.state.allUsers.length\n                                }\n                            }\n                            this.setState({friendsInfo:myFriendsInfo})\n                        } \n                        // get the 2 latest posts of my friends\n                        for (var ii=0; ii<this.state.friendsInfo.length;ii++){\n                            console.log(this.state.friendsInfo[ii].id)\n                            firebase.firestore()\n                            .collection('posts')\n                            .doc(this.state.friendsInfo[ii].id)\n                            .collection(\"userPosts\")\n                            .orderBy(\"date\",\"asc\")\n                            .limit(2)\n                            .get()\n                            .then((infos)=>{\n                                let posts = infos.docs.map(doc => {\n                                    const data= doc.data();\n                                    timelinePosts.push(data)\n                                })\n                            })\n                        }\n                        timelinePosts.sort(function(a,b){\n                            return new Date(b.date) - new Date(a.date)\n                        })\n                    })\n                })\n            })\n        \n    }\n\n    searchUser(search){\n        let myUsers = []\n        firebase.firestore()\n            .collection('users')\n            .where('name','>=',search)\n            .get()\n            .then((infos)=>{\n                infos.docs.map(doc => {\n                    myUsers.push(doc)\n                })\n                this.setState({userList: myUsers})\n            })\n    }\n    \n    \n    render() {\n        return (\n            <View>\n                <Text>Welcome Home ! </Text>                \n                <Button title=\"Add Picture\" onPress={()=> {this.props.navigation.navigate('addPicture')}}/>\n                <Button title=\"Go to home page\" onPress={()=> {this.props.navigation.navigate('homePage',{res:this.state.username})}}/>\n                <View>\n                    <TextInput placeholder=\"Search User\" onChangeText={(search)=>{this.searchUser(search)}}/>\n                    <FlatList\n                        numColumns={1}\n                        horizental={false}\n                        data={this.state.userList}\n                        renderItem={({item})=>(\n                            <TouchableOpacity \n                                onPress={()=>this.props.navigation.navigate('friendPage',{res: item,\n                                                                                        friends: this.state.userFriends,\n                                                                                        originalUser: this.state.username})}>\n                                <Text>{item.data().name}</Text>\n                            </TouchableOpacity>\n                        )} />\n                </View>\n                <Button title=\"Log Out\" onPress={()=> {this.props.navigation.navigate('Logout')}} />\n\n            </View>\n            )\n    }\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}